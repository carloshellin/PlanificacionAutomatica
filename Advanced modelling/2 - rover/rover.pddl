(define (domain rover)
	(:requirements :typing :durative-actions :fluents :durative-actions :constraints :equality :preferences)
	(:types rover location)
	(:predicates (at-rover ?r - rover ?l - location)
				 (have_image ?l - location)
				 (drilled ?l - location)
				 (communicated ?l - location)
				 (analysed ?l - location)
				 (extended ?r - rover)
	)
	(:functions
		(distance ?l1 - location ?l2 - location)
		(slow-speed ?r - rover)
		(fast-speed ?r - rover)
		(time-picture ?r - rover)
		(time-drill ?r - rover)
		(time-communication ?r - rover)
		(time-analyse ?r - rover)
		(time-extends ?r - rover)
		(battery ?r - rover)
		(capacity ?r - rover)
		(recharge-rate ?r - rover)
		(slow-consume ?r - rover)
		(fast-consume ?r - rover)
		(total-battery-used)
	)
	(:durative-action move-slow
		:parameters (?r - rover ?l1 - location ?l2 - location)
		:duration (= ?duration (/ (distance ?l1 ?l2) (slow-speed ?r)))
		:condition (and (over all (not (= ?l1 ?l2)))
						(at start (at-rover ?r ?l1))
						(at start (>= (battery ?r) (* (distance ?l1 ?l2) (slow-consume ?r))))
					  )
		:effect (and (at end (at-rover ?r ?l2))
					 (at start (not (at-rover ?r ?l1)))
					 (at end (increase (total-battery-used) (* (distance ?l1 ?l2) (slow-consume ?r))))
					 (at end (decrease (battery ?r) (* (distance ?l1 ?l2) (slow-consume ?r))))
				)
	)
	(:durative-action move-fast
		:parameters (?r - rover ?l1 - location ?l2 - location)
		:duration (= ?duration (/ (distance ?l1 ?l2) (fast-speed ?r)))
		:condition (and (over all (not (= ?l1 ?l2)))
						(at start (at-rover ?r ?l1))
						(at start (>= (battery ?r) (* (distance ?l1 ?l2) (fast-consume ?r))))
					  )
		:effect (and (at end (at-rover ?r ?l2))
					 (at start (not (at-rover ?r ?l1)))
					 (at end (increase (total-battery-used) (* (distance ?l1 ?l2) (fast-consume ?r))))
					 (at end (decrease (battery ?r) (* (distance ?l1 ?l2) (fast-consume ?r))))
				)
	)
	(:durative-action take-a-picture
		:parameters (?r - rover ?l - location)
		:duration (= ?duration (time-picture ?r))
		:condition (over all (at-rover ?r ?l))
		:effect (at end (have_image ?l))
	)
	(:durative-action drill
		:parameters (?r - rover ?l - location)
		:duration (= ?duration (time-drill ?r))
		:condition (over all (at-rover ?r ?l))
		:effect (at end (drilled ?l))
	)
	(:durative-action earth-communication
		:parameters (?r - rover ?l - location)
		:duration (= ?duration (time-communication ?r))
		:condition (and (over all (at-rover ?r ?l))
						(at start (analysed ?l))
						(at start (have_image ?l))
					  )
		:effect (at end (communicated ?l))
	)
	(:durative-action analyse-samples
		:parameters (?r - rover ?l - location)
		:duration (= ?duration (time-analyse ?r))
		:condition (and (over all (at-rover ?r ?l))
						(at start (drilled ?l))
					  )
		:effect (at end (analysed ?l))
	)
	(:durative-action extends-solar-panels
		:parameters (?r - rover)
		:duration (= ?duration (time-extends ?r))
		:effect (at end (extended ?r))
	)
	(:durative-action recharge-battery
		:parameters (?r - rover)
		:duration (= ?duration (/ (- (capacity ?r) (battery ?r)) (recharge-rate ?r)))
		:condition (and (at start (> (capacity ?r) (battery ?r)))
						(over all (extended ?r))
				   )
		:effect (and (at end (not (extended ?r)))
					 (at end (assign (battery ?r) (capacity ?r)))
				)
	)
)